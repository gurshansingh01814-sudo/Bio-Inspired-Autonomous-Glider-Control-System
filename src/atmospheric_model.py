import numpy as np
import math

class AtmosphericModel:
    """
    Simple atmospheric model including a single, circular thermal.
    The thermal wind is purely vertical (Wz).
    """
    # CRITICAL FIX: The constructor only takes two positional arguments: center and radius.
    def __init__(self, thermal_center, thermal_radius):
        """
        Initializes the thermal properties.
        thermal_center (np.array): [Cx, Cy] of the thermal center.
        thermal_radius (float): Radius of the thermal in meters.
        """
        self.thermal_center = thermal_center
        self.thermal_radius = thermal_radius
        self.W_z_max = 5.0 # Max vertical wind speed in the thermal center (m/s)

    def get_wind_vector(self, x, y, z):
        """
        Returns the wind vector [Wx, Wy, Wz] at position (x, y, z).
        Wind is only generated by the thermal (Wz).
        """
        # Horizontal distance from the thermal center
        dist = np.linalg.norm(np.array([x, y]) - self.thermal_center)

        W_z_thermal = 0.0

        if dist < self.thermal_radius:
            # Cosine profile: max uplift at center, zero at edge
            # W_z = W_z_max * (cos(pi * dist / R) + 1) / 2
            W_z_thermal = self.W_z_max * (math.cos(math.pi * dist / self.thermal_radius) + 1.0) / 2.0
        
        # Wind vector: [0, 0, Wz]
        return np.array([0.0, 0.0, W_z_thermal])